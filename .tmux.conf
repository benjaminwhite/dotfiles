set-option -g default-command "reattach-to-user-namespace -l zsh"

set-option -g renumber-windows on

# status bar
set-option -g status-utf8 on

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
# Custom status bar
# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-right '#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour254,bg=colour234,nobold]#(rdio-current-track-tmux)⮂#[fg=colour16,bg=colour254,bold] #h '

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour16,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# more inutitive keybindings for splitting
unbind '"'
bind v split-window -h -c '#{pane_current_path}'
unbind %
bind V split-window -v -c '#{pane_current_path}'

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -sg escape-time 0
set -sg repeat-time 600

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# new window
bind-key C-c new-window -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Vi copypaste mode
set-window-option -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# keybindings to make resizing easier
bind-key -r Left resize-pane -L 5
bind-key -r Right resize-pane -R 5
bind-key -r Up resize-pane -U 5
bind-key -r Down resize-pane -D 5

# Navigate Windows
bind-key -r ] next-window
bind-key -r [ previous-window

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# quick view of processes
#bind '~' split-window "exec htop"

# auto window rename
set-window-option -g automatic-rename

# select pane with mouse 
set-option -g mouse-select-pane on

# select window with mouse
set-option -g mouse-select-window on

# not really sure what this does, but with it, the scrollwheel works inside Vim
#set-option -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
set-window-option -g mode-mouse on

# Enable Scrolling
set -g mode-mouse on

# Set scrollback to 100,000 lines
set -g history-limit 100000 

#cool ssh bind
bind-key s command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# color
set -g default-terminal "screen-256color"

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
